{"mappings":"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","sources":["node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","src/app.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","async function main() {\n    await window.ethereum.enable();\n\n    let account;\n\n    [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n    console.log(account);\n\n    window.ethereum.on('accountsChanged', (accounts) => {\n        [account] = accounts;\n    });\n\n    const signButton = document.getElementById('sign-button');\n    const dataInput = document.getElementById('data-input');\n\n    signButton.onclick = async () => {\n        const data = dataInput.value.trim();\n\n        if (!data) {\n            alert('Empty data!');\n\n            return;\n        }\n\n        const hexData = `0x${Buffer.from(data, 'utf8').toString('hex')}`;\n\n        console.log('--- --- --- --- ---')\n        console.log('     data', data);\n        console.log('  hexData', hexData);\n\n        const signature = await window.ethereum.request({\n            method: 'personal_sign',\n            params: [hexData, account],\n        });\n\n        console.log('account', account)\n        console.log('signature', signature);\n\n        alert(`Input:\\n${data}\\n\\nAccount:\\n${account}\\n\\nSignature:\\n${signature}\\n\\nCheck console logs if you cannot copy values`);\n    };\n}\n\nmain();\n"],"names":["$51861dfc7ca9d588$export$a143d493d941bafc","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","b64","tmp","i1","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","arr","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$_byteLength","curByte","len2","$eeb0961446aae8e3$var$revLookup","charCodeAt","uint8","len3","length","extraBytes","parts","maxChunkLength","i3","push","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","join","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","Uint8Array","Array","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","len1","Error","indexOf","start","end","num","output","i2","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","$51861dfc7ca9d588$var$customInspectSymbol","Symbol","$51861dfc7ca9d588$var$Buffer","$51861dfc7ca9d588$var$createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","string","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","write","slice","$51861dfc7ca9d588$var$fromString","ArrayBuffer","isView","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","byteOffset","byteLength","$51861dfc7ca9d588$var$fromArrayLike","$51861dfc7ca9d588$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","obj","isBuffer","len","$51861dfc7ca9d588$var$checked","undefined","$51861dfc7ca9d588$var$numberIsNaN","type","isArray","data","$51861dfc7ca9d588$var$fromObject","toPrimitive","$51861dfc7ca9d588$var$assertSize","size","array","toString","mustMatch","arguments","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","toLowerCase","$51861dfc7ca9d588$var$slowToString","this","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","n","$51861dfc7ca9d588$var$bidirectionalIndexOf","val","dir","$51861dfc7ca9d588$var$arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","$51861dfc7ca9d588$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","str","byteArray","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","units","hi","lo","$51861dfc7ca9d588$var$utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","fromCharCode","apply","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$51861dfc7ca9d588$var$typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","$51861dfc7ca9d588$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$51861dfc7ca9d588$var$hexSliceLookupTable","bytes","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","max","$51861dfc7ca9d588$var$wrtBigUInt64LE","$51861dfc7ca9d588$var$checkIntBI","BigInt","$51861dfc7ca9d588$var$wrtBigUInt64BE","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","byteLength1","mul","readUintBE","readUIntBE","byteLength2","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$51861dfc7ca9d588$var$defineBigIntMethod","$51861dfc7ca9d588$var$validateNumber","first","last","$51861dfc7ca9d588$var$boundsError","readBigUInt64BE","readIntLE","byteLength3","readIntBE","byteLength4","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","byteLength5","writeUintBE","writeUIntBE","byteLength6","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","byteLength7","limit","sub","writeIntBE","byteLength8","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$51861dfc7ca9d588$var$errors","$51861dfc7ca9d588$var$E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","$51861dfc7ca9d588$var$addNumericalSeparator","byteLength10","range","ERR_OUT_OF_RANGE","byteLength9","$51861dfc7ca9d588$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","split","$51861dfc7ca9d588$var$base64clean","src","dst","alphabet","table","i16","fn","$51861dfc7ca9d588$var$BufferBigIntNotDefined","async","account","window","ethereum","enable","request","method","on","accounts","signButton","document","getElementById","dataInput","onclick","alert","hexData","$e73bf42412feb220$require$Buffer","signature","params","$e73bf42412feb220$var$main"],"version":3,"file":"index.4d5298a3.js.map"}